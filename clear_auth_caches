#!/usr/bin/env bash

################################################################################
## 
## Clear Kolab and Cyrus authentication cache databases
## 
## Copyright (C) 2015-2020 Michael Roland <mi.roland@gmail.com>
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.
## 
################################################################################


SCRIPT_NAME=$(basename $0)
SCRIPT_PATH=$(readlink -f "$(dirname $0)")


. "$SCRIPT_PATH/kolab_config_loader"


usage() {
	echo "Usage: ${SCRIPT_NAME} [options]"
	echo "Clear Kolab and Cyrus authentication cache databases"
	echo ""
	echo -e "Options:"
	echo -e "\t-h          Show this message"
	echo ""
	echo "Copyright (c) 2015-2020 Michael Roland <mi.roland@gmail.com>"
	echo "License GPLv3+: GNU GPL version 3 or later <https://www.gnu.org/licenses/>"
	echo ""
	echo "This is free software: you can redistribute and/or modify it under the"
	echo "terms of the GPLv3+.  There is NO WARRANTY; not even the implied warranty"
	echo "of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
	echo ""
}

while getopts ":h?:" opt; do
    case "$opt" in
    h|\?)
        if [ ! -z $OPTARG ] ; then
            echo "${SCRIPT_NAME}: invalid option -- $OPTARG" >&2
        fi
        usage
        exit 1
        ;;
    esac
done

shift $((OPTIND-1))
[ "$1" = "--" ] && shift


echo "Clearing authentication caches ..."

echo "  Expiring Cyrus PTS cache ..."
# NOTE: important when moving users between domains
${CYRUS_CMD}ptexpire -E 0

echo "  Expiring Kolab auth cache ..."
${KOLAB_AUTH_CACHE_CMD} <<EOF
delete from entries;
EOF

echo "  Expiring Kolab policy cache ..."
${KOLAB_POLICY_CACHE_CMD} <<EOF
delete from policy_result;
EOF

echo "  Restaring services ..."
systemctl restart ${SERVICE_IMAP}
systemctl restart ${SERVICE_SMTP}

echo "Done."
