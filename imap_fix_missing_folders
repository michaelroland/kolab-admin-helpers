#!/usr/bin/env bash

################################################################################
## 
## Fix missing mailbox sub-folders
## 
## Copyright (C) 2015-2024 Michael Roland <mi.roland@gmail.com>
## 
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
## 
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.
## 
################################################################################


SCRIPT_NAME=$(basename $0)
SCRIPT_PATH=$(readlink -f "$(dirname $0)")


. "$SCRIPT_PATH/kolab_config_loader"


usage() {
	echo "Usage: ${SCRIPT_NAME} [options]"
	echo "Fix missing mailbox sub-folders"
	echo ""
	echo -e "Options:"
	echo -e "\t-h          Show this message"
	echo ""
	echo "Copyright (c) 2015-2024 Michael Roland <mi.roland@gmail.com>"
	echo "License GPLv3+: GNU GPL version 3 or later <https://www.gnu.org/licenses/>"
	echo ""
	echo "This is free software: you can redistribute and/or modify it under the"
	echo "terms of the GPLv3+.  There is NO WARRANTY; not even the implied warranty"
	echo "of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
	echo ""
}

while getopts ":h?:" opt; do
    case "$opt" in
    h|\?)
        if [ ! -z $OPTARG ] ; then
            echo "${SCRIPT_NAME}: invalid option -- $OPTARG" >&2
        fi
        usage
        exit 1
        ;;
    esac
done

shift $((OPTIND-1))
[ "$1" = "--" ] && shift


echo "Scanning user mailboxes for sub-folders without parent ..."
userprefix="${IMAP_NAMESPACE_USER}${IMAP_HIERARCHY_SEP}"
subfolders=$(${KOLAB_CMD}list-mailboxes "$userprefix*${IMAP_HIERARCHY_SEP}*${IMAP_HIERARCHY_SEP}*%")
last_parent_mbxname=""
while read mailbox <&3 ; do
    mbxname=$(echo "$mailbox" | sed -n -E 's/^'"$IMAP_NAMESPACE_USER"'[\'"$IMAP_HIERARCHY_SEP"'](.*?)(@[^@]*)$/\1/p')
    domain=$(echo "$mailbox" | sed -n -E 's/^'"$IMAP_NAMESPACE_USER"'[\'"$IMAP_HIERARCHY_SEP"'](.*?)(@[^@]*)$/\2/p')

    username=$(echo "$mbxname" | sed -n -E 's/^([^\'"$IMAP_HIERARCHY_SEP"']+)[\'"$IMAP_HIERARCHY_SEP"'](.*)$/\1/p')
    parent_mbxname=$(echo "$mbxname" | sed -n -E 's/^(.*)[\'"$IMAP_HIERARCHY_SEP"'](.*?)$/\1/p')
    if [ "$last_parent_mbxname" == "$parent_mbxname" ] ; then
        continue
    fi
    last_parent_mbxname="$parent_mbxname"
    while [ -n "$parent_mbxname" ] && [ "$parent_mbxname" != "$username" ] ; do
        if [ $(${KOLAB_CMD}list-mailboxes "$userprefix$parent_mbxname$domain" | head -c1 | wc -c) -eq 0 ] ; then
            echo "Creating missing folder $parent_mbxname for user $username$domain ..."
            ${KOLAB_CMD}create-mailbox "$userprefix$parent_mbxname$domain"
        fi
        parent_mbxname=$(echo "$parent_mbxname" | sed -n -E 's/^(.*)[\'"$IMAP_HIERARCHY_SEP"'](.*?)$/\1/p')
    done
done 3<<< "$subfolders"

echo "Scanning shared mailboxes for sub-folders without parent ..."
mbxprefix="${IMAP_NAMESPACE_SHARED}${IMAP_HIERARCHY_SEP}"
subfolders=$(${KOLAB_CMD}list-mailboxes "$mbxprefix*${IMAP_HIERARCHY_SEP}*${IMAP_HIERARCHY_SEP}*%")
last_parent_mbxname=""
while read mailbox <&3 ; do
    mbxname=$(echo "$mailbox" | sed -n -E 's/^'"$IMAP_NAMESPACE_SHARED"'[\'"$IMAP_HIERARCHY_SEP"'](.*?)(@[^@]*)$/\1/p')
    domain=$(echo "$mailbox" | sed -n -E 's/^'"$IMAP_NAMESPACE_SHARED"'[\'"$IMAP_HIERARCHY_SEP"'](.*?)(@[^@]*)$/\2/p')
    
    username=$(echo "$mbxname" | sed -n -E 's/^([^\'"$IMAP_HIERARCHY_SEP"']+)[\'"$IMAP_HIERARCHY_SEP"'](.*)$/\1/p')
    parent_mbxname=$(echo "$mbxname" | sed -n -E 's/^(.*)[\'"$IMAP_HIERARCHY_SEP"'](.*?)$/\1/p')
    if [ "$last_parent_mbxname" == "$parent_mbxname" ] ; then
        continue
    fi
    last_parent_mbxname="$parent_mbxname"
    parent_mbx="$mailbox"
    while [ -n "$parent_mbxname" ] && [ "$parent_mbxname" != "$username" ] ; do
        if [ $(${KOLAB_CMD}list-mailboxes "$mbxprefix$parent_mbxname$domain" | head -c1 | wc -c) -eq 0 ] ; then
            echo "Creating missing folder $parent_mbxname for shared mailbox $username$domain ..."
            ${KOLAB_CMD}create-mailbox "$mbxprefix$parent_mbxname$domain"
        fi
        parent_mbxname=$(echo "$parent_mbxname" | sed -n -E 's/^(.*)[\'"$IMAP_HIERARCHY_SEP"'](.*?)$/\1/p')
    done
done 3<<< "$subfolders"

echo "Done."
